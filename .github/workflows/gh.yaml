# .github/workflows/gh.yml
name: Git Release CI / CD

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write # required for gh release

jobs:
  test-build:
    name: Test and build on ${{ matrix.os }} with Python 3.x
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache PDM dependencies
        uses: actions/cache@v4
        with:
          path: |
            __pypackages__/
            .venv/
          key: ${{ runner.os }}-pdm-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pdm invoke
          pdm install
        shell: bash

      - name: Testing app on ${{ matrix.os }}
        run: |
          pdm run invoke base.tests
        shell: bash

      - name: Build and check (zip / InnoSetup installer)
        if: runner.os == 'Windows'
        run: |
          pdm run invoke zip.check
          pdm run invoke inno.check
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: dist-${{ matrix.os }}
          path: dist/*
          if-no-files-found: error

  test-exe:
    name: Test InnoSetup installer on Windows (w/o Python)
    runs-on: windows-latest
    needs: [test-build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true

      - name: Dist files list
        run: |
          ls ./dist
        shell: bash

      - name: Installing app
        run: |
          ./dist/*.exe /DIR="C:\Program Files (x86)\file_conversor" /SUPPRESSMSGBOXES /VERYSILENT /NORESTART /SP-
        shell: bash

      - name: Check installed app
        run: |
          "C:\Program Files (x86)\file_conversor\file_conversor.bat" --version
        shell: bash

  publish:
    name: Git Release app
    runs-on: ubuntu-latest
    needs: [test-exe]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache PDM dependencies
        uses: actions/cache@v4
        with:
          path: |
            __pypackages__/
            .venv/
          key: ${{ runner.os }}-pdm-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pdm invoke
          pdm install
        shell: bash

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        shell: bash

      - name: Publish Git release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pdm run invoke git.publish
        shell: bash
